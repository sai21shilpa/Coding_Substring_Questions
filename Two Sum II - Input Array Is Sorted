class Solution {
    public int[] twoSum(int[] numbers, int target) {
        int left = 0;
        int right = numbers.length - 1;
        
        while (left < right) {
            int currentSum = numbers[left] + numbers[right];
            
            if (currentSum == target) {
                // Return the indices + 1 (since the array is 1-indexed)
                return new int[]{left + 1, right + 1};
            } else if (currentSum < target) {
                left++; // Move the left pointer to the right to increase the sum
            } else {
                right--; // Move the right pointer to the left to decrease the sum
            }
        }
        
        // Since the problem guarantees exactly one solution, this return is just a placeholder
        return new int[]{-1, -1};
    }
}

// Example usage:
public class Main {
    public static void main(String[] args) {
        Solution solution = new Solution();
        int[] numbers = {2, 7, 11, 15};
        int target = 9;
        int[] result = solution.twoSum(numbers, target);
        System.out.println("[" + result[0] + ", " + result[1] + "]"); // Output: [1, 2]
    }
}
